syntax = "proto3";




message PushFrame {
    uint64 SeqID = 1;
    uint64 LogID = 2;
    int32 service = 3;
    int32 method = 4;
    //    repeated PushHeader headers = 5;
    string payload_encoding = 6;
    string payload_type = 7;
    bytes payload = 8;               // 数据字节
    string LodIDNew = 9;
}

message Message {
    string method = 1;
    bytes payload = 2;
    int64 msg_id = 3;
    int32 msg_type = 4;
    int64 offset = 5;
    bool need_wrds_store = 6;
    int64 wrds_version = 7;
    string wrds_sub_key = 8;
    map<string, string> message_extra = 9;
}

message Response {
    repeated Message messages = 1;   // 消息列表
    string cursor = 2;
    int64 fetch_interval = 3;
    int64 now = 4;
    string internal_ext = 5;
    int32 fetch_type = 7;
    map<string, string> route_params = 6;
    int64 heartbeat_duration = 8;
    bool need_ack = 9;
    string push_server = 10;
    string live_cursor = 11;
    bool history_no_more = 12;
    string proxy_server = 13;
}

message User {
    uint64 id = 1;
    uint64 shotId = 2;
    string nickName = 3;
    uint32 gender = 4;
    string Signature = 5;
    uint32 Level = 6;
    uint64 Birthday = 7;
    string Telephone = 8;
    Image AvatarThumb = 9;
    Image AvatarMedium = 10;
    Image AvatarLarge = 11;
    string city = 14;
}

message ChatMessage {
    User user = 2;
    string content = 3;
    bool visible_to_sender = 4;
}


// 礼物信息
message GiftMessage {
//    Common common = 1;
    uint64 giftId = 2;
    uint64 fanTicketCount = 3;
    uint64 groupCount = 4;
    uint64 repeatCount = 5;
    uint64 comboCount = 6;
    User user = 7;
    User toUser = 8;
    uint32 repeatEnd = 9;
    TextEffect textEffect = 10;
    uint64 groupId = 11;
    uint64 incomeTaskgifts = 12;
    uint64 roomFanTicketCount = 13;
    GiftIMPriority priority = 14;
    GiftStruct gift = 15;
    string logId = 16;
    uint64 sendType = 17;
    PublicAreaCommon publicAreaCommon = 18;
    Text trayDisplayText = 19;
    uint64 bannedDisplayEffects = 20;
    //  GiftTrayInfo trayInfo = 21;
    //  AssetEffectMixInfo assetEffectMixInfo = 22;
    bool displayForSelf = 25;
    string interactGiftInfo = 26;
    string diyItemInfo = 27;
    repeated uint64 minAssetSetList = 28;
    uint64 totalCount = 29;
    uint32 clientGiftSource = 30;
    //  AnchorGiftData anchorGift = 31;
    repeated uint64 toUserIdsList = 32;
    uint64 sendTime = 33;
    uint64 forceDisplayEffects = 34;
    string traceId = 35;
    uint64 effectDisplayTs = 36;
}
message PublicAreaCommon {
    Image userLabel = 1;
    uint64 userConsumeInRoom = 2;
    uint64 userSendGiftCntInRoom = 3;
}

message Image {
    repeated string urlListList = 1;
    string uri = 2;
    uint64 height = 3;
    uint64 width = 4;
    string avgColor = 5;
    uint32 imageType = 6;
    string openWebUrl = 7;
    ImageContent content = 8;
    bool isAnimated = 9;
//    NinePatchSetting FlexSettingList = 10;
//    NinePatchSetting TextSettingList = 11;
}

message ImageContent {
    string name = 1;
    string fontColor = 2;
    uint64 level = 3;
    string alternativeText = 4;
}
message GiftStruct {
    Image image = 1;
    string describe = 2;
    bool notify = 3;
    uint64 duration = 4;
    uint64 id = 5;
    //  GiftStructFansClubInfo fansclubInfo = 6;
    bool forLinkmic = 7;
    bool doodle = 8;
    bool forFansclub = 9;
    bool combo = 10;
    uint32 type = 11;
    uint32 diamondCount = 12;
    bool isDisplayedOnPanel = 13;
    uint64 primaryEffectId = 14;
    Image giftLabelIcon = 15;
    string name = 16;
    string region = 17;
    string manual = 18;
    bool forCustom = 19;
    //  specialEffectsMap = 20;
    Image icon = 21;
    uint32 actionType = 22;
    // fixme 后面的就不写了还有几十个属性

}

message GiftIMPriority {
    repeated uint64 queueSizesList = 1;
    uint64 selfQueuePriority = 2;
    uint64 priority = 3;
}

message TextEffect {
    TextEffectDetail portrait = 1;
    TextEffectDetail landscape = 2;
}

message TextEffectDetail {
    Text text = 1;
    uint32 textFontSize = 2;
    Image background = 3;
    uint32 start = 4;
    uint32 duration = 5;
    uint32 x = 6;
    uint32 y = 7;
    uint32 width = 8;
    uint32 height = 9;
    uint32 shadowDx = 10;
    uint32 shadowDy = 11;
    uint32 shadowRadius = 12;
    string shadowColor = 13;
    string strokeColor = 14;
    uint32 strokeWidth = 15;
}

message Text {
    string key = 1;
    string defaultPatter = 2;
    TextFormat defaultFormat = 3;
    repeated TextPiece piecesList = 4;
}

message TextFormat {
    string color = 1;
    bool bold = 2;
    bool italic = 3;
    uint32 weight = 4;
    uint32 italicAngle = 5;
    uint32 fontSize = 6;
    bool useHeighLightColor = 7;
    bool useRemoteClor = 8;
}


message TextPiece {
    bool type = 1;
    TextFormat format = 2;
    string stringValue = 3;
    TextPieceUser userValue = 4;
    TextPieceGift giftValue = 5;
    TextPieceHeart heartValue = 6;
    TextPiecePatternRef patternRefValue = 7;
    TextPieceImage imageValue = 8;
}

message TextPieceImage {
    Image image = 1;
    float scalingRate = 2;
}

message TextPiecePatternRef {
    string key = 1;
    string defaultPattern = 2;
}

message TextPieceHeart {
    string color = 1;
}

message TextPieceGift {
    uint64 giftId = 1;
    PatternRef nameRef = 2;
}

message TextPieceUser {
    User user = 1;
    bool withColon = 2;
}

message PatternRef {
    string key = 1;
    string defaultPattern = 2;
}

message MemberMessage {
//    Common common = 1;
    User user = 2;
    uint64 memberCount = 3;
    User operator = 4;
    bool isSetToAdmin = 5;
    bool isTopUser = 6;
    uint64 rankScore = 7;
    uint64 topUserNo = 8;
    uint64 enterType = 9;
    uint64 action = 10;
    string actionDescription = 11;
    uint64 userId = 12;
    EffectConfig effectConfig = 13;
    string popStr = 14;
    EffectConfig enterEffectConfig = 15;
    Image backgroundImage = 16;
    Image backgroundImageV2 = 17;
    Text anchorDisplayText = 18;
    PublicAreaCommon publicAreaCommon = 19;
    uint64 userEnterTipType = 20;
    uint64 anchorEnterTipType = 21;
}


message EffectConfig {
    uint64 type = 1;
    Image icon = 2;
    uint64 avatarPos = 3;
    Text text = 4;
    Image textIcon = 5;
    uint32 stayTime = 6;
    uint64 animAssetId = 7;
    Image badge = 8;
    repeated uint64 flexSettingArrayList = 9;
    Image textIconOverlay = 10;
    Image animatedBadge = 11;
    bool hasSweepLight = 12;
    repeated uint64 textFlexSettingArrayList = 13;
    uint64 centerAnimAssetId = 14;
    Image dynamicImage = 15;
    map<string, string> extraMap = 16;
    uint64 mp4AnimAssetId = 17;
    uint64 priority = 18;
    uint64 maxWaitTime = 19;
    string dressId = 20;
    uint64 alignment = 21;
    uint64 alignmentOffset = 22;
}